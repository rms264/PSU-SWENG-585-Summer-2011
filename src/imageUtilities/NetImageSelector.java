package imageUtilities;import gui.KahinduImage;import java.awt.*;import java.awt.event.*;import java.applet.Applet;import java.net.*;public class NetImageSelector extends Applet  {  Choice ch=new Choice();  Toolkit tk = Toolkit.getDefaultToolkit();  Label lb=new Label("Select Image");  KahinduImage kImage;  Image image;  URL url;  String st = "ftp://vinny.bridgeport.edu/home/ftp/pub/ipij/images/";          public NetImageSelector(KahinduImage image, String address){    this.kImage = image;    execute(address);  }    public void execute(String address) {    Toolkit tk = Toolkit.getDefaultToolkit();    Image netImage;    URL url=null;       System.out.println("Loading..."+address);   try {url=new URL(address);}    catch (MalformedURLException e) {     e.printStackTrace();   }                netImage=tk.getImage(url);   if (netImage == null) {     System.out.println("netload failed");     return;    }   kImage.setImageResize(netImage);//   setSize(image.getWidth(),image.getHeight());  }                   public void init() {		try {url=new URL(st+"baboon.JPEG");}    catch (MalformedURLException e) {      e.printStackTrace();    }                      image = tk.getImage(url);        //                     ch.addItem("baboon.JPEG");        ch.addItem("girl.JPEG");        ch.addItem("lena.JPEG");        ch.addItem("peppers.JPEG");                          add(lb);        add(ch);    }                           public void processEvent(AWTEvent e1)    {      if (e1.getSource() instanceof Choice)      {        try        {          url=new URL(st+ch.getSelectedItem());        }        catch (MalformedURLException e)        {          e.printStackTrace();        }               image=tk.getImage(url);        repaint();      }      return;    }    public void update(Graphics g) {      paint(g);    }    public void paint(Graphics g)    {      g.drawImage(image,10,40,this);    }}
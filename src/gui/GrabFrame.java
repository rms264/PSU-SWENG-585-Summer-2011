package gui;import imageUtilities.Grab;import imageUtilities.NetImageSelector;import imageUtilities.SnellWlx;import imageUtilities.TestPattern;import java.awt.*;import java.awt.event.*;import java.net.*;public class GrabFrame extends BaseFrame{  private static final long serialVersionUID = 1L;  private SnellWlx sw;  private NetImageSelector nis;  KahinduMenu grabMenu;  KahinduMenu netMenu;  MenuItem cover_mi;  MenuItem ublogo_mi;  MenuItem author_mi;  MenuItem testPattern_mi;  MenuItem grabTestPattern_mi;   public GrabFrame(KahinduMenuBar menuBar, KahinduImage image) {   super(menuBar, image);   initMenu(); } private void initMenu() {   grabMenu = new KahinduMenu("Grab",MenuEnum.GRAB);   netMenu = new KahinduMenu("net",MenuEnum.NET);   try {    menuBar.addMenu(MenuEnum.FILE, grabMenu);  } catch (Exception e) {    System.out.println(e.getMessage());  }   try {    menuBar.addMenu(MenuEnum.GRAB, netMenu);  } catch (Exception e) {    System.out.println(e.getMessage());  }   cover_mi = menuBar.addMenuItem(netMenu, "cover",this);   ublogo_mi = menuBar.addMenuItem(netMenu, "logo");   author_mi = menuBar.addMenuItem(netMenu, "the author");   testPattern_mi = menuBar.addMenuItem(grabMenu, "[T]est Patterns",this);   grabTestPattern_mi = menuBar.addMenuItem(grabMenu, "[E-G]rab Patterns",this);   }  public void actionPerformed(ActionEvent e) {  	if (match(e, author_mi)) {  	  new NetImageSelector(  	      image,"http://www.docjava.com/Pub/Documentation/me.gif");  		return;  	}  	if (match(e, cover_mi)) {  	  new NetImageSelector(          image,"http://www.docjava.com/Pub/Documentation/me.gif");  		return;  	}  	if (match(e, ublogo_mi)) {  	  new NetImageSelector(          image,"http://www.docjava.com/Pub/Documentation/me.gif");  		return;  	}  	if (match(e, testPattern_mi)) {  		new TestPattern();  		return;  	}  	if (match(e, grabTestPattern_mi)) {  		new Grab(image);  		return;  	}  }} 